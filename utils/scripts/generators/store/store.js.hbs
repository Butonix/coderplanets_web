/*
 * {{ properCase name }} store
 *
 */

import { types as t, getParent } from 'mobx-state-tree'
import R from 'ramda'

import { isObject, makeDebugger } from '../../utils/functions'

/* eslint-disable no-unused-vars */
const debug = makeDebugger('S:{{ properCase name }}')
/* eslint-enable no-unused-vars */

const {{ properCase name }} = t
  .model('{{ properCase name }}', {})
  .views(self => ({
    get app() {
      return getParent(self)
    },
  }))
  .actions(self => ({
    markState(sobj) {
      if (!isObject(sobj)) {
        throw new Error('S:{{ properCase name }} markState get no object params')
      }
      R.forEachObjIndexed((val, key) => {
        self[key] = val
      }, sobj)
    },
  }))

export default {{ properCase name }}
